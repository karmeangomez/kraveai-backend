// ... importaciones ...

async function main() {
  try {
    // ‚≠ê 1. Crear instancia de UltimateProxyMaster
    const proxySystem = new UltimateProxyMaster();
    
    // ‚≠ê 2. Inicializar el sistema de proxies
    await proxySystem.initialize();
    
    console.log('‚úÖ Sistema de proxies listo\n');
    
    for (let i = 1; i <= TOTAL_CUENTAS; i++) {
      console.log(chalk.blue(`üöÄ Creando cuenta ${i}/${TOTAL_CUENTAS}`));

      // ‚≠ê 3. Obtener proxy usando el sistema heredado
      const proxy = proxySystem.getNextProxy();
      
      if (!proxy) {
        console.error(`‚ùå Sin proxies v√°lidos disponibles. Deteniendo.`);
        break;
      }

      try {
        const cuenta = await crearCuentaInstagram(proxy);
        
        if (cuenta?.usuario && cuenta?.password) {
          creadas++;
          AccountManager.addAccount(cuenta);
          console.log(chalk.green(`‚úÖ Cuenta creada: @${cuenta.usuario}`));
        } else {
          throw new Error('Cuenta inv√°lida');
        }
      } catch (error) {
        errores++;
        console.log(chalk.red(`üî• Error creando cuenta #${i}: ${error.message || error}`));
        
        // ‚≠ê 4. Marcar proxy como malo
        proxySystem.markProxyAsBad(proxy);

        if (errores >= MAX_ERRORES) {
          console.log(chalk.bgRed(`üõë Se alcanzaron ${errores} errores. Deteniendo producci√≥n.`));
          await notifyTelegram(`‚ùå Detenido tras ${errores} errores. Se crearon ${creadas} cuentas.`);
          break;
        }
      }
    }
    
    // ... resto del c√≥digo ...
  } catch (error) {
    console.error('‚ùå Error general:', error);
    await notifyTelegram(`‚ùå Error cr√≠tico: ${error.message}`);
  }
}

// Iniciar la aplicaci√≥n
main();
