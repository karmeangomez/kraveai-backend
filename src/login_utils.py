# ~/kraveai-backend/src/login_utils.py
import os
from instagrapi import Client
from instagrapi.exceptions import LoginRequired, ClientError

COOKIE_FILE = "ig_session.json"
USERNAME = os.getenv("IG_USERNAME")
PASSWORD = os.getenv("INSTAGRAM_PASS")


def login_instagram():
    """
    Inicia sesi√≥n en Instagram con las credenciales del .env
    Si ya existe ig_session.json, intenta restaurar sesi√≥n.
    """
    if not USERNAME or not PASSWORD:
        raise ValueError("‚ùå IG_USERNAME o INSTAGRAM_PASS no est√°n configuradas en el entorno (.env)")

    cl = Client()
    cl.delay_range = [2, 5]  # Evita sospecha por bots

    # üîÅ Intenta restaurar sesi√≥n si existe ig_session.json
    if os.path.exists(COOKIE_FILE):
        try:
            cl.load_settings(COOKIE_FILE)
            cl.get_timeline_feed()  # Si no falla, la sesi√≥n es v√°lida
            print(f"‚úÖ Sesi√≥n restaurada correctamente como @{cl.username}")
            return cl
        except LoginRequired:
            print("‚ö†Ô∏è La sesi√≥n anterior ha expirado, se intentar√° login manual.")
        except ClientError as e:
            print(f"‚ö†Ô∏è Error al restaurar sesi√≥n anterior: {e}")
        except Exception as e:
            print(f"‚ö†Ô∏è Fall√≥ restaurar sesi√≥n por error inesperado: {e}")

    # üîë Si no hay sesi√≥n v√°lida, login manual
    try:
        cl.login(USERNAME, PASSWORD)
        cl.dump_settings(COOKIE_FILE)
        print(f"‚úÖ Login exitoso como @{USERNAME}")
        return cl
    except ClientError as e:
        print(f"‚ùå Error de Instagram (ClientError): {e}")
        return None
    except Exception as e:
        print(f"‚ùå Error inesperado en login: {e}")
        return None
